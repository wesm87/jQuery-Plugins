{"version":3,"sources":["jquery.preloadImages.coffee","jquery.preloadImages.js"],"names":["$","DEBUG_LEVEL","log","window","jQuery","NONE","ERROR","WARNING","MESSAGE","message","debugLevel","level","settings","console","fn","preloadImages","options","defaults","delay","onFirstImageLoad","document","trigger","onEachImageLoad","currentImage","id","this","data","onLoadingComplete","extend","each","firstImageLoaded","images","prevId","showImage","t","find","bind","img","next","src","parseInt","load","call","length","attr","callback","clearTimeout","setTimeout","first"],"mappings":"CAAA,WAAA,GAAAA,GAAAC,EAAAC,CAAAF,GAAIG,OAAOC,QAAUD,OAAOH,EAM5BC,GACCI,KAAS,EACTC,MAAS,EACTC,QAAS,EACTC,QAAS,GASVN,EAAM,SAAEO,EAASC,GAGhB,GAAAC,EAEA,OAFAA,GAAA,MAAAD,EAAQA,EAAaT,EAAYO,QAE9BG,GAASC,SAASF,YACMP,OAAOU,QAAjCA,QAAQX,IAAKO,GADd,QAIDT,EAAEc,GAAGC,cAAgB,SAAEC,GAEtB,GAAAC,GAAAL,CA+BA,OA3BAK,IAECP,WAAYT,EAAYM,QAExBW,MAAO,EAEPC,iBAAkB,WCPZ,MDSLnB,GAAGoB,UAAWC,QAAS,oBACvBR,QAAQX,IAAK,uBAEdoB,gBAAiB,WAEhB,GAAAC,GAAAC,CAKA,OALAD,GAAevB,EAAGyB,MAClBD,EAAKD,EAAaG,KAAM,MAExBH,EAAaG,KAAM,SAAU,QAExBF,EAAUX,QAAQX,IAAK,SAASsB,EAAG,WAAxC,QAEDG,kBAAmB,WCTb,MDSgBd,SAAQX,IAAK,uBAEpCU,EAAWZ,EAAE4B,UAAYX,EAAUD,GAK5BS,KAAKI,KAAK,WAEhB,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,CC4CI,OD5CJH,GAAS/B,EAAGyB,MAAOU,KAAM,OACzBH,EAAS,EACTF,GAAmB,EACnBI,EAAI,KAEJH,EAAOK,KAAM,OAAQ,WAEpB,GAAAZ,GAAAa,EAAAC,EAAAC,CAKA,OALAF,GAAOrC,EAAGyB,MACVc,EAAOF,EAAIX,KAAM,OACjBF,EAAOgB,SAAUH,EAAIX,KAAM,MAAQ,IACnCY,EAAOtC,EAAG+B,EAAQP,IAEfe,EACCf,EACCa,EAAIX,KAAM,WAEZb,QAAQX,IAAK,SAASsB,EAAG,mCAEzBS,EAAWK,EAAMd,KAIjBa,EAAII,KAAM,WAST,MAPAR,GAAWK,EAAMd,GACjBZ,EAASU,gBAAgBoB,KAAMjB,MAE1BK,IACJA,GAAmB,EACnBlB,EAASO,iBAAiBuB,KAAMjB,OAE5Ba,EAAKK,OAAV,OACC/B,EAASe,kBAAkBe,KAAMjB,QAInCY,EAAIO,KAAM,MAAOL,IAElB1B,QAAQX,IAAK,6CAA8CD,EAAYK,QAExEO,QAAQX,IAAK,8CAA+CD,EAAYK,OACxE2B,EAAWK,EAAMd,MAGnBS,EAAY,SAAEI,EAAKb,GAElB,GAAAqB,ECJK,ODIFX,IAAOY,aAAcZ,GAExBW,EAAW,WCRJ,MDSHrB,KAAMQ,EAAS,EACjBA,EAASR,EAETa,EAAMrC,EAAG+B,EAAQC,IAElBK,EAAIhB,QAAS,SAEda,EAAIa,WAAYF,EAAUjC,EAASM,QAEpCa,EAAOiB,QAAQ3B,QAAS,aCVvBqB,KAAKjB","file":"jquery.preloadImages.min.js","sourcesContent":["$ = window.jQuery || window.$\n\n# ----------------------------------------------------\n# Constants\n# ----------------------------------------------------\n\nDEBUG_LEVEL =\n\tNONE:    0\n\tERROR:   1\n\tWARNING: 2\n\tMESSAGE: 3\n\n\n\n\n# ----------------------------------------------------\n# Begin script\n# ----------------------------------------------------\n\nlog = ( message, debugLevel ) ->\n\n\t# If no level is specified, assume it's a message\n\tlevel = debugLevel ? DEBUG_LEVEL.MESSAGE\n\n\tif level <= settings.debugLevel\n\t\tconsole.log( message ) if window.console\n\n\n$.fn.preloadImages = ( options ) ->\n\n\t###\n\t# Settings\n\t###\n\n\tdefaults =\n\n\t\tdebugLevel: DEBUG_LEVEL.WARNING\n\n\t\tdelay: 0 # how long to wait (in ms) between loading each image\n\n\t\tonFirstImageLoad: ->\n\n\t\t\t$( document ).trigger( 'firstImageLoaded' )\n\t\t\tconsole.log( 'First image loaded' )\n\n\t\tonEachImageLoad: ->\n\n\t\t\tcurrentImage = $( this )\n\t\t\tid = currentImage.data( 'id' )\n\n\t\t\tcurrentImage.data( 'loaded', 'true' )\n\n\t\t\tif ( id ) then console.log( \"Image #{id} loaded\" )\n\n\t\tonLoadingComplete: -> console.log( 'All images loaded' )\n\n\tsettings = $.extend( {}, defaults, options )\n\n\t###\n\t# Preload images\n\t###\n\treturn this.each ->\n\n\t\timages = $( this ).find( 'img' )\n\t\tprevId = 0\n\t\tfirstImageLoaded = false\n\t\tt = null\n\n\t\timages.bind( 'show', ->\n\n\t\t\timg  = $( this )\n\t\t\tsrc  = img.data( 'src' )\n\t\t\tid   = parseInt( img.data( 'id' ), 10 )\n\t\t\tnext = $( images[ id ] )\n\n\t\t\tif src\n\t\t\t\tif id\n\t\t\t\t\tif img.data( 'loaded' )\n\n\t\t\t\t\t\tconsole.log( \"Image #{id} already loaded, skipping image\" )\n\n\t\t\t\t\t\tshowImage( next, id )\n\n\t\t\t\t\telse\n\n\t\t\t\t\t\timg.load( ->\n\n\t\t\t\t\t\t\tshowImage( next, id )\n\t\t\t\t\t\t\tsettings.onEachImageLoad.call( this )\n\n\t\t\t\t\t\t\tif ! firstImageLoaded\n\t\t\t\t\t\t\t\tfirstImageLoaded = true\n\t\t\t\t\t\t\t\tsettings.onFirstImageLoad.call( this )\n\n\t\t\t\t\t\t\tif ! next.length\n\t\t\t\t\t\t\t\tsettings.onLoadingComplete.call( this )\n\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\timg.attr( 'src', src )\n\t\t\t\telse\n\t\t\t\t\tconsole.log( 'No data-id attribute found, skipping image', DEBUG_LEVEL.ERROR )\n\t\t\telse\n\t\t\t\tconsole.log( 'No data-src attribute found, skipping image', DEBUG_LEVEL.ERROR )\n\t\t\t\tshowImage( next, id )\n\t\t)\n\n\t\tshowImage = ( img, id ) ->\n\n\t\t\tif t then clearTimeout( t )\n\n\t\t\tcallback = ->\n\t\t\t\tif id == prevId + 1\n\t\t\t\t\tprevId = id\n\t\t\t\telse\n\t\t\t\t\timg = $( images[ prevId ] )\n\n\t\t\t\timg.trigger( 'show' )\n\n\t\t\tt = setTimeout( callback, settings.delay )\n\n\t\timages.first().trigger( 'show' )\n","(function() {\n  var $, DEBUG_LEVEL, log;\n\n  $ = window.jQuery || window.$;\n\n  DEBUG_LEVEL = {\n    NONE: 0,\n    ERROR: 1,\n    WARNING: 2,\n    MESSAGE: 3\n  };\n\n  log = function(message, debugLevel) {\n    var level;\n    level = debugLevel != null ? debugLevel : DEBUG_LEVEL.MESSAGE;\n    if (level <= settings.debugLevel) {\n      if (window.console) {\n        return console.log(message);\n      }\n    }\n  };\n\n  $.fn.preloadImages = function(options) {\n\n    /*\n    \t * Settings\n     */\n    var defaults, settings;\n    defaults = {\n      debugLevel: DEBUG_LEVEL.WARNING,\n      delay: 0,\n      onFirstImageLoad: function() {\n        $(document).trigger('firstImageLoaded');\n        return console.log('First image loaded');\n      },\n      onEachImageLoad: function() {\n        var currentImage, id;\n        currentImage = $(this);\n        id = currentImage.data('id');\n        currentImage.data('loaded', 'true');\n        if (id) {\n          return console.log(\"Image \" + id + \" loaded\");\n        }\n      },\n      onLoadingComplete: function() {\n        return console.log('All images loaded');\n      }\n    };\n    settings = $.extend({}, defaults, options);\n\n    /*\n    \t * Preload images\n     */\n    return this.each(function() {\n      var firstImageLoaded, images, prevId, showImage, t;\n      images = $(this).find('img');\n      prevId = 0;\n      firstImageLoaded = false;\n      t = null;\n      images.bind('show', function() {\n        var id, img, next, src;\n        img = $(this);\n        src = img.data('src');\n        id = parseInt(img.data('id'), 10);\n        next = $(images[id]);\n        if (src) {\n          if (id) {\n            if (img.data('loaded')) {\n              console.log(\"Image \" + id + \" already loaded, skipping image\");\n              return showImage(next, id);\n            } else {\n              img.load(function() {\n                showImage(next, id);\n                settings.onEachImageLoad.call(this);\n                if (!firstImageLoaded) {\n                  firstImageLoaded = true;\n                  settings.onFirstImageLoad.call(this);\n                }\n                if (!next.length) {\n                  return settings.onLoadingComplete.call(this);\n                }\n              });\n              return img.attr('src', src);\n            }\n          } else {\n            return console.log('No data-id attribute found, skipping image', DEBUG_LEVEL.ERROR);\n          }\n        } else {\n          console.log('No data-src attribute found, skipping image', DEBUG_LEVEL.ERROR);\n          return showImage(next, id);\n        }\n      });\n      showImage = function(img, id) {\n        var callback;\n        if (t) {\n          clearTimeout(t);\n        }\n        callback = function() {\n          if (id === prevId + 1) {\n            prevId = id;\n          } else {\n            img = $(images[prevId]);\n          }\n          return img.trigger('show');\n        };\n        return t = setTimeout(callback, settings.delay);\n      };\n      return images.first().trigger('show');\n    });\n  };\n\n}).call(this);\n"],"sourceRoot":"/source/"}